version: '3'

services:
  analyzer:
    restart: unless-stopped
    build:
        dockerfile: ./deployments/tagtweet/Dockerfile
    working_dir: /internal/tagtweet
    environment:
       KAFKA_READ_TOPIC: "tweets"
       KAFKA_WRITE_TOPIC: "tweets-tags"
       KAFKA_BROKERS: "kafka:19092"
    depends_on:
      - kafka

  producer:
    restart: unless-stopped
    build:
        dockerfile: ./deployments/producer/Dockerfile
    working_dir: /internal/producer
    environment:
       KAFKA_READ_TOPIC: "tweets-tags"
       KAFKA_WRITE_TOPIC: "tweets"
       KAFKA_BROKERS: "kafka:19092"
    depends_on:
      - analyzer

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
    - "2181:2181"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.12-2.2.1
    environment:
      KAFKA_CREATE_TOPICS: "tweets:1:1,tweets-tags:1:1"

      KAFKA_ADVERTISED_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://kafka:19092,
        LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092

      KAFKA_LISTENERS: >-
        LISTENER_DOCKER_INTERNAL://:19092,
        LISTENER_DOCKER_EXTERNAL://:9092

      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: >-
        LISTENER_DOCKER_INTERNAL:PLAINTEXT,
        LISTENER_DOCKER_EXTERNAL:PLAINTEXT

      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: >-
        kafka.controller=INFO,
        kafka.producer.async.DefaultEventHandler=INFO,
        state.change.logger=INFO
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock